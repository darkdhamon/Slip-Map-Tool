//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFConsoleApp.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StarSystem", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceApp")]
    [System.SerializableAttribute()]
    public partial class StarSystem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
       
       [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GMNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SystemLockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GMNotes {
            get {
                return this.GMNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.GMNotesField, value) != true)) {
                    this.GMNotesField = value;
                    this.RaisePropertyChanged("GMNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemDetails {
            get {
                return this.SystemDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemDetailsField, value) != true)) {
                    this.SystemDetailsField = value;
                    this.RaisePropertyChanged("SystemDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SystemLocked {
            get {
                return this.SystemLockedField;
            }
            set {
                if ((this.SystemLockedField.Equals(value) != true)) {
                    this.SystemLockedField = value;
                    this.RaisePropertyChanged("SystemLocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemName {
            get {
                return this.SystemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemNameField, value) != true)) {
                    this.SystemNameField = value;
                    this.RaisePropertyChanged("SystemName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISlipMapService")]
    public interface ISlipMapService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISlipMapService/GetData", ReplyAction="http://tempuri.org/ISlipMapService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISlipMapService/GetData", ReplyAction="http://tempuri.org/ISlipMapService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISlipMapService/UpdateStarSystem", ReplyAction="http://tempuri.org/ISlipMapService/UpdateStarSystemResponse")]
        WCFConsoleApp.ServiceReference1.StarSystem UpdateStarSystem(WCFConsoleApp.ServiceReference1.StarSystem composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISlipMapService/UpdateStarSystem", ReplyAction="http://tempuri.org/ISlipMapService/UpdateStarSystemResponse")]
        System.Threading.Tasks.Task<WCFConsoleApp.ServiceReference1.StarSystem> UpdateStarSystemAsync(WCFConsoleApp.ServiceReference1.StarSystem composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISlipMapServiceChannel : WCFConsoleApp.ServiceReference1.ISlipMapService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SlipMapServiceClient : System.ServiceModel.ClientBase<WCFConsoleApp.ServiceReference1.ISlipMapService>, WCFConsoleApp.ServiceReference1.ISlipMapService {
        
        public SlipMapServiceClient() {
        }
        
        public SlipMapServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SlipMapServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SlipMapServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SlipMapServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public WCFConsoleApp.ServiceReference1.StarSystem UpdateStarSystem(WCFConsoleApp.ServiceReference1.StarSystem composite) {
            return base.Channel.UpdateStarSystem(composite);
        }
        
        public System.Threading.Tasks.Task<WCFConsoleApp.ServiceReference1.StarSystem> UpdateStarSystemAsync(WCFConsoleApp.ServiceReference1.StarSystem composite) {
            return base.Channel.UpdateStarSystemAsync(composite);
        }
    }
}
